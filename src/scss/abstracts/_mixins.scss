// Media query mixins
@mixin media-breakpoint-up($name) {
  $min: map-get($breakpoints, $name);
  @if $min != 0 {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name) {
  $max: map-get($breakpoints, $name) - 0.02;
  @media (max-width: $max) {
    @content;
  }
}

@mixin media-breakpoint-between($lower, $upper) {
  $min: map-get($breakpoints, $lower);
  $max: map-get($breakpoints, $upper) - 0.02;

  @if $min != 0 {
    @media (min-width: $min) and (max-width: $max) {
      @content;
    }
  } @else {
    @media (max-width: $max) {
      @content;
    }
  }
}

// Button mixins
@mixin button-variant($color, $background, $border: $background) {
  color: $color;
  background-color: $background;
  border-color: $border;
  
  &:hover {
    color: $color;
    background-color: darken($background, 7.5%);
    border-color: darken($border, 10%);
  }
  
  &:focus,
  &.focus {
    color: $color;
    background-color: darken($background, 7.5%);
    border-color: darken($border, 10%);
    box-shadow: 0 0 0 0.2rem rgba($border, 0.5);
  }
  
  &:disabled,
  &.disabled {
    color: $color;
    background-color: $background;
    border-color: $border;
    opacity: 0.65;
  }
}

@mixin button-outline-variant($color, $color-hover: $white) {
  color: $color;
  border-color: $color;
  
  &:hover {
    color: $color-hover;
    background-color: $color;
    border-color: $color;
  }
  
  &:focus,
  &.focus {
    box-shadow: 0 0 0 0.2rem rgba($color, 0.5);
  }
  
  &:disabled,
  &.disabled {
    color: $color;
    background-color: transparent;
    opacity: 0.65;
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

// Text mixins
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

// Position mixins
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin cover-background {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

// Animation mixins
@mixin transition($property: all, $duration: 0.3s, $ease: ease-in-out) {
  transition: $property $duration $ease;
}

@mixin hover-lift {
  @include transition(transform);
  
  &:hover {
    transform: translateY(-5px);
  }
}

// Form mixins
@mixin form-control-focus($color: $primary-dark) {
  &:focus {
    border-color: lighten($color, 25%);
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba($color, 0.25);
  }
}

// Clearfix
@mixin clearfix {
  &::after {
    display: block;
    content: "";
    clear: both;
  }
}